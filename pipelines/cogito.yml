meta:

  gh-status_handlers: &gh-status-handlers
    on_success:
      put: gh-status
      inputs: [cogito-test-read-write.git]
      params: {state: success}
    on_failure:
      put: gh-status
      inputs: [cogito-test-read-write.git]
      params: {state: failure}
    on_error:
      put: gh-status
      inputs: [cogito-test-read-write.git]
      params: {state: error}

  task-config: &task-config
    config:
      platform: linux
      image_resource:
        type: registry-image
        source: { repository: alpine }
      run:
        path: /bin/sh
        args:
          - -c
          - |
            set -o errexit
            set -x
            echo "Running from inline task"
            exit 0


resource_types:

- name: cogito
  type: registry-image
  check_every: 24h
  source:
    repository: docker.ci.pix4d.com/cogito
    tag: ((tag))
    username: pix4d
    password: ((docker_cloud_pix4d_password))

resources:

- name: gh-status
  type: cogito
  # Since check is a no-op, we check infrequently to reduce load on the system.
  check_every: 24h
  source:
    # Optional, for debugging only.
    # log_level: debug
    # log_url: ((concourse_cognito_logs))
    owner: pix4d
    repo: cogito-test-read-write
    access_token: ((concourse_janus_access_token_repo_status))

- name: cogito-test-read-write.git
  type: git
  source:
    uri: git@github.com:pix4d/cogito-test-read-write.git
    branch: ((branch))
    private_key: ((concourse_janus_ssh_key))

jobs:

  - name: Autocat
    <<: *gh-status-handlers
    plan:
      - get: cogito-test-read-write.git
        trigger: true
      - put: gh-status
        inputs: [cogito-test-read-write.git]
        params: {state: pending}
      - task: maybe-fail
        <<: *task-config

  - name: Motormouse
    <<: *gh-status-handlers
    plan:
      - get: cogito-test-read-write.git
        trigger: true
      - put: gh-status
        inputs: [cogito-test-read-write.git]
        params: {state: pending}
      - task: maybe-fail
        <<: *task-config
